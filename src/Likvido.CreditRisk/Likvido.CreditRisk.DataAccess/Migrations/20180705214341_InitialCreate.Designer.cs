// <auto-generated />
using System;
using Likvido.CreditRisk.DataAccess.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Likvido.CreditRisk.DataAccess.Migrations
{
    [DbContext(typeof(LikvidoDbContext))]
    [Migration("20180705214341_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Likvido.CreditRisk.Domain.Models.Registration.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdministratorName");

                    b.Property<string>("AdministratorPhone");

                    b.Property<string>("AdministratorReference");

                    b.Property<Guid?>("CompanyDataId");

                    b.Property<string>("CreditorName");

                    b.Property<string>("CreditorPhone");

                    b.Property<string>("CreditorReference");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<DateTime>("DeletionDate");

                    b.Property<int>("DeptorId");

                    b.Property<string>("Description");

                    b.Property<string>("Foundation");

                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid?>("PrivateDataId");

                    b.Property<int>("RegistrationSystemId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("PrivateDataId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Likvido.CreditRisk.Domain.Models.Registration.RegistrationCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("AddressTwo");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("RegistrationName");

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("RegistrationCompanies");
                });

            modelBuilder.Entity("Likvido.CreditRisk.Domain.Models.Registration.RegistrationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("AddressTwo");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("RegistrationNumber");

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("RegistrationUsers");
                });

            modelBuilder.Entity("Likvido.CreditRisk.Domain.Models.Registration.Registration", b =>
                {
                    b.HasOne("Likvido.CreditRisk.Domain.Models.Registration.RegistrationCompany", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("Likvido.CreditRisk.Domain.Models.Registration.RegistrationUser", "PrivateData")
                        .WithMany()
                        .HasForeignKey("PrivateDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
